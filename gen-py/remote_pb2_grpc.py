# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remote_types_pb2 as remote__types__pb2


class RemoteStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddCurl = channel.unary_unary(
        '/Remote/AddCurl',
        request_serializer=remote__types__pb2.AddCurlRequest.SerializeToString,
        response_deserializer=remote__types__pb2.AddCurlResult.FromString,
        )
    self.CurlRes = channel.unary_unary(
        '/Remote/CurlRes',
        request_serializer=remote__types__pb2.CurlResRequest.SerializeToString,
        response_deserializer=remote__types__pb2.CurlResResult.FromString,
        )
    self.AddPing = channel.unary_unary(
        '/Remote/AddPing',
        request_serializer=remote__types__pb2.AddPingRequest.SerializeToString,
        response_deserializer=remote__types__pb2.AddPingResult.FromString,
        )
    self.PingRes = channel.unary_unary(
        '/Remote/PingRes',
        request_serializer=remote__types__pb2.PingResRequest.SerializeToString,
        response_deserializer=remote__types__pb2.PingResResult.FromString,
        )


class RemoteServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AddCurl(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CurlRes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddPing(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PingRes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RemoteServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddCurl': grpc.unary_unary_rpc_method_handler(
          servicer.AddCurl,
          request_deserializer=remote__types__pb2.AddCurlRequest.FromString,
          response_serializer=remote__types__pb2.AddCurlResult.SerializeToString,
      ),
      'CurlRes': grpc.unary_unary_rpc_method_handler(
          servicer.CurlRes,
          request_deserializer=remote__types__pb2.CurlResRequest.FromString,
          response_serializer=remote__types__pb2.CurlResResult.SerializeToString,
      ),
      'AddPing': grpc.unary_unary_rpc_method_handler(
          servicer.AddPing,
          request_deserializer=remote__types__pb2.AddPingRequest.FromString,
          response_serializer=remote__types__pb2.AddPingResult.SerializeToString,
      ),
      'PingRes': grpc.unary_unary_rpc_method_handler(
          servicer.PingRes,
          request_deserializer=remote__types__pb2.PingResRequest.FromString,
          response_serializer=remote__types__pb2.PingResResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Remote', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
